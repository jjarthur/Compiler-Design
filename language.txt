NPROG <program> ::= CD <id> <globals> <funcs> <mainbody>
NGLOB <globals> ::= <consts> <types> <arrays>
Special <consts> ::= constants <initlist>
Special <consts> ::= ε
NILIST <initlist> ::= <init> <initlisttail>
Special <initlisttail> ::= , <initlist>
Special <initlisttail> ::= ε
NINIT <init> ::= <id> is <expr>
Special <types> ::= types <typelist> 
Special <types> ::= ε
Special <arrays> ::= arrays <arrdecls>
Special <arrays> ::= ε
NFUNCS <funcs> ::= <func> <funcs>
Special <funcs> ::= ε
NMAIN <mainbody> ::= main <slist> begin <stats> end CD <id>
NSDLST <slist> ::= <sdecl> <slisttail>
Special <slisttail> ::= , <slist>
Special <slisttail> ::= ε
NTYPEL <typelist> ::= <type> <typelisttail>
Special <typelisttail> ::= <typelist>
Special <typelisttail> ::= ε
Special <type> ::= <structid> is <typetail>
NRTYPE <typetail> ::= <fields> end
NATYPE <typetail> ::= array [ <expr> ] of <structid>
NFLIST <fields> ::= <sdecl> <fieldstail>
Special <fieldstail> ::= <sdecl>
Special <fieldstail> ::= ε
NSDECL <sdecl> ::= <id> : <stype>
NALIST <arrdecls> ::= <arrdecl> <arrdeclstail>
Special <arrdeclstail> ::= , <arrdecls>
Special <arrdeclstail> ::= ε
NARRD <arrdecl> ::= <id> : <typeid>
NFUND <func> ::= func <id> ( <plist> ) : <rtype> <funcbody>
Special <rtype> ::= <stype>
Special <rtype> ::= void
Special <plist> ::= <params>
Special <plist> ::= ε
NPLIST <params> ::= <param> <paramstail> 
Special <paramstail> ::= , <params>
Special <paramstail> ::= ε
NSIMP <param> ::= <paramvar>
NARRP <param> ::= <paramvar>
NARRC <param> ::= const <arrdecl>
Special <paramvar> ::= <id> : <paramvartail>
NSDECL <paramvartail> ::= <stype>
NARRD <paramvartail> ::= <typeid>
Special <funcbody> ::= <locals> begin <stats> end
Special <locals> ::= <dlist>
Special <locals> ::= ε
NDLIST <dlist> ::= <decl> <dlisttail>
Special <dlisttail> ::= , <dlist>
Special <dlisttail> ::= ε
Special <decl> ::= <sdecl>
Special <decl> ::= <arrdecl>
Special <stype> ::= integer
Special <stype> ::= real
Special <stype> ::= boolean
NSTATS <stats> ::= <stat> ; <statstail>
NSTATS <stats> ::= <strstat> <statstail>
Special <statstail> ::= <stats>
Special <statstail> ::= ε
Special <strstat> ::= <forstat>
Special <strstat> ::= <ifstat>
Special <stat> ::= <repstat>
Special <stat> ::= <asgnstat>
Special <stat> ::= <iostat>
Special <stat> ::= <callstat>
Special <stat> ::= <returnstat>
NFORL <forstat> ::= for ( <asgnlist> ; <bool> ) <stats> end
NREPT <repstat> ::= repeat ( <asgnlist> ) <stats> until <bool>
Special <asgnlist> ::= <alist>
Special <asgnlist> ::= ε
NASGNS <alist> ::= <asgnstat> <alisttail>
Special <alisttail> ::= , <alist>
Special <alisttail> ::= ε
NIFTH <ifstat> ::= if ( <bool> ) <stats> <elsestat> end
NIFTE <elsestat> ::= else <stats>
Special <elsestat> ::= ε
NASGN <asgnstat> ::= <var> << <bool>
NINPUT <iostat> ::= In >> <vlist>
NOUTP <iostat> ::= Out << <iostatcall>
Special <iostatcall> ::= <prlist> <iostatcalltail>
NOUTL <iostatcall> ::= Line
Special <iostatcalltail> ::= << Line
Special <iostatcalltail> ::= ε
NCALL <callstat> ::= <id> ( <callstattail> )
Special <callstattail> ::= <elist>
Special <callstattail> ::= ε
NRETN <returnstat> ::= return <returnstattail>
Special <returnstattail> ::= <expr>
Special <returnstattail> ::= ε
NVLIST <vlist> ::= <var> <vlisttail>
Special <vlisttail> ::= , <vlist>
Special <vlisttail> ::= ε
NSIMV <var> ::= <id> <vararr>
NAELT <vararr> ::= [<expr>] <vararrtail>
Special <vararr> ::= ε
NARRV <vararrtail> ::= . <id>
Special <vararrtail> ::= ε
NEXPL <elist> ::= <bool> <elisttail>
Special <elisttail> ::= , <elist>
Special <elisttail> ::= ε
NBOOL <bool> ::= <rel> <booltail>
Special <booltail> ::= <logop><rel><booltail>
Special <booltail> ::= ε
NNOT <rel> ::= not <rel>
Special <rel> ::= <expr> <reltail>
Special <reltail> ::= <relop> <expr>
Special <reltail> ::= ε
NAND <logop> ::= and
NOR <logop> ::= or
NXOR <logop> ::= xor
NEQL <relop> ::= ==
NNEQ <relop> ::= !=
NGRT <relop> ::= >
NLEQ <relop> ::= <=
NLSS <relop> ::= <
NGEQ <relop> ::= >=
Special <expr> ::= <term> <exprtail>
NADD <exprtail> ::= + <term> <exprtail>
NSUB <exprtail> ::= - <term> <exprtail>
Special <exprtail> ::= ε
Special <term> ::= <fact> <termtail>
NMUL <termtail> ::= * <fact> <termtail>
NDIV <termtail> ::= / <fact> <termtail>
NMOD <termtail> ::= % <fact> <termtail>
Special <termtail> ::= ε
Special	<fact>	::=	<exponent> <facttail>
NPOW <facttail>	::=	^ <exponent> <facttail>
Special	<facttail>	::=	ε
Special <exponent> ::= <var>
NILIT <exponent> ::= <intlit>
NFLIT <exponent> ::= <reallit>
Special <exponent> ::= <fncall>
NTRUE <exponent> ::= true
NFALS <exponent> ::= false
Special <exponent> ::= ( <bool> )
NFCALL <fncall> ::= <id> ( <fncalltail> )
Special <fncalltail> ::= <elist>
Special <fncalltail> ::= ε
NPRLIST <prlist> ::= <printitem> <prlisttail>
Special <prlisttail> ::= , <prlist>
Special <prlisttail> ::= ε
Special <printitem> ::= <expr>
NSTRG <printitem> ::= <string>

<id>, <structid>, <typeid> are all simply identifier tokens returned by the scanner. <intlit>, <reallit> and <string> are also special tokens returned by the scanner.